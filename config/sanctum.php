<?php

use Laravel\Sanctum\Sanctum;

/**
 * @link https://readouble.com/laravel/9.x/ja/sanctum.html
 */
return [

    /*
    |--------------------------------------------------------------------------
    | ステートフルドメイン
    |--------------------------------------------------------------------------
    |
    | 以下のドメイン / ホストからのリクエストは，ステートフルAPI認証クッキーを
    | 受け取ります．一般的に，これらはフロントエンドSPAを介してAPIにアクセスする
    | ローカルドメインとプロダクションドメインを含むべきです．
    |
    */

    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
        '%s%s',
        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
        Sanctum::currentApplicationUrlWithPort()
    ))),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Guards
    |--------------------------------------------------------------------------
    |
    | この配列には，Sanctum がリクエストの認証を試みる際にチェックする認証ガードが
    | 含まれています．これらのガードのいずれでもリクエストを認証できない場合は，
    | Sanctum は受信したリクエストに存在するベアラトークンを認証に使用します．
    |
    */

    'guard' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | 有効期限切れ分
    |--------------------------------------------------------------------------
    |
    | この値は，発行されたトークンが期限切れとみなされるまでの分数を制御します．
    | この値がNULLの場合，パーソナルアクセストークンは期限切れになりません．
    | これは，ファーストパーティセッションのライフタイムを微調整することはありません．
    |
    */

    'expiration' => null,

    /*
    |--------------------------------------------------------------------------
    | Sanctum ミドルウェア
    |--------------------------------------------------------------------------
    |
    | ファーストパーティーのSPAをSanctumで認証する場合，リクエストを処理する際に
    | Sanctumが使用するミドルウェアの一部をカスタマイズする必要がある場合があります．
    | 以下のミドルウェアは必要に応じて変更してください．
    |
    */

    'middleware' => [
        'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,
        'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,
    ],

];
